<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 知识点1：Spring中配置DataSource-->
    <!-- 需要加载多个的话用这个 -->
    <!-- <context:property-placeholder location="classpath*:conf/conf*.properties" /> -->
    <context:property-placeholder location="classpath:db.properties" />

    <!-- spring 注解装配-->
    <!-- 使用annotation -->
    <context:annotation-config/>
    <!-- 使用annotation自动注册bean,并检查@Controller, @Service, @Repository注解已被注入 -->
    <context:component-scan base-package="com.bugmaker.action"/>
    <context:component-scan base-package="com.bugmaker.service"/>
    <context:component-scan base-package="com.bugmaker.dao" />


    <!-- data connection setting -->
    <!-- 知识点1：Spring中配置DataSource-->
    <!-- 可以为spring配置的bean的属性设置值了-->
    <!-- C3P0数据源：ComboPooledDataSource -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${database.driverClassName}"></property>
        <property name="jdbcUrl" value="${database.url}"></property>
        <property name="user" value="${database.username}"></property>
        <property name="password" value="${database.password}"></property>
        <!-- 设置数据库连接池的保留的最大连接数 -->
        <property name="maxPoolSize">
            <value>50</value>
        </property>
        <!-- 设置数据库连接池的保留的最小连接数 -->
        <property name="minPoolSize">
            <value>5</value>
        </property>
        <!-- 设置数据库连接池的初始化连接数，取值应在minPoolSize与maxPoolSize之间 -->
        <property name="initialPoolSize">
            <value>5</value>
        </property>
        <!-- 设置数据库连接池的连接最大空闲时间，若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime">
            <value>20</value>
        </property>
        <!-- c3p0缓存Statement的数量数 -->
        <!-- JDBC的标准参数，用以控制数据源内加载的
        PreparedStatements数量。但由于预缓存的statements属于单个connection
        而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
        如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭-->
        <property name="maxStatements">
            <value>50</value>
        </property>
        <!-- 当连接池里面的连接用完的时候,C3P0一下获取新的连接数 -->
        <property name="acquireIncrement">
            <value>20</value>
        </property>

    </bean>

    <!-- hibernate 注解方式管理，映射实体类时spring_hibernate.xml配置-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <!-- 引用上面设置的数据源 -->
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>

        <property name="hibernateProperties">
            <props>
                <!-- hibernate数据库方言配置(即连接哪种数据库) -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.autoReconnect">true</prop>

                <!--<prop key="hibernate.connection.autocommit">true</prop>-->

                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <!-- 解决session关闭问题 -->
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                <prop key="current_session_context_class">thread</prop>

                <!--&lt;!&ndash; 启用查询缓存，程序中须手动操作 &ndash;&gt;-->
                <!--<prop key="hibernate.jdbc.fetch_size">50</prop>-->
                <!-- 启用查询缓存，程序中须手动操作 -->
                <!--<prop key="hibernate.cache.use_second_level_cache">false</prop>-->


                <prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/wanshibang</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
            </props>

        </property>

        <!-- 包扫描的方式加载注解类 -->
        <property name="packagesToScan">
            <list>
                <value>com.bugmaker.entity</value>
            </list>
        </property>
    </bean>

    <!-- 用注解来实现事物管理 -->
    <!-- 注解方式，需要在ServiceImpl加上@Transactional-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
</beans>